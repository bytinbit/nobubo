[tool.poetry]
name = "nobubo"
version = "1.4.1"
description = "Nobubo assembles a digital pdf sewing pattern and cuts it up into a desired output print size. A specialized n-up tool also suited for non-sewing purposes."
authors = ["bytinbit"]
license = "AGPL v3.0"
readme = "README.md"
homepage = "https://github.com/bytinbit/nobubo"
repository = "https://github.com/bytinbit/nobubo"
classifiers =  [
        "Topic :: Printing",
        "Topic :: Utilities",
        "Topic :: Multimedia :: Graphics :: Graphics Conversion",
        "License :: OSI Approved :: GNU Affero General Public License v3",
    ]


[tool.poetry.scripts]
nobubo = "nobubo.cli:main"

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.0.0"
pikepdf = "^2.12.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
tox = "^3.23.1"
mypy = "^0.910"
pylint = "^2.8.2"
flake8 = "^3.9.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = 3.8

### --strict
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
# disallow_untyped_calls = true
# disallow_untyped_defs = true  
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
# no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
# warn_return_any = true
# no_implicit_reexport = true
# strict_equality = true

### Other strictness flags
warn_unreachable = true
disallow_any_unimported = true

### Output
show_error_codes = true
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = "textract.*"
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py,mypy,linting
testpaths = "tests"

[testenv]
description = Run pytest
deps = 
    pytest
    pytest-cov
    rich
    textract
commands = pytest {posargs}

[testenv:mypy]
description = Check typing with mypy
deps = mypy
       click
       pytest
       rich
       textract
passenv = TERM
commands = mypy {posargs} nobubo tests

[testenv:linting]
description = Run flake8 for linting
deps = flake8
commands = flake8 --max-line-length 88 nobubo tests {posargs}

[testenv:pikepdf-main]
description = Run project tests against pikepdf-main branch
deps = 
    git+https://github.com/pikepdf/pikepdf#master
    pytest
    pytest-cov
    rich
    textract
commands = pytest {posargs}
"""
